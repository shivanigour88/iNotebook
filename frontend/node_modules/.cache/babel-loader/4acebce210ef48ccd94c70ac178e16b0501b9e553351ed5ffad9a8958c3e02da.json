{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\reactLearn\\\\inotebook\\\\src\\\\context\\\\notes\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport NoteContext from \"./noteContext\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteState = props => {\n  _s();\n  const host = \"http://localhost:5000\";\n  const initialNotes = [];\n  const [notes, setNotes] = useState(initialNotes);\n\n  //Get all Notes\n  const getNotes = async () => {\n    //API call\n    const response = await fetch(`${host}/api/notes//fetchallnotes`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n        // \"auth-token\" :  localStorage.getItem('token')\n        //\"auth-token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjYzZDMyODQ1M2ZmYzY2MTUzYWFkNGE1In0sImlhdCI6MTcxNTMxNzU0N30.Y8ZdecVTjLQYCaS-wz_fyLEmtOAzvnX2IEvYddP6irE\",\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    setNotes(json);\n  };\n\n  //ADD a Note\n  const addNote = async (title, description, tag) => {\n    //API call\n    const response = await fetch(`${host}/api/notes/addnote`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem('token')\n        // \"auth-token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjYzZDMyODQ1M2ZmYzY2MTUzYWFkNGE1In0sImlhdCI6MTcxNTMxNzU0N30.Y8ZdecVTjLQYCaS-wz_fyLEmtOAzvnX2IEvYddP6irE\",\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const note = await response.json();\n    setNotes(notes.concat(note));\n    console.log(note);\n    console.log(\"Adding a new note\");\n  };\n\n  //Delete a Note\n  const deleteNote = async id => {\n    //API call\n    const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem('token')\n        // \"auth-token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjYzZDMyODQ1M2ZmYzY2MTUzYWFkNGE1In0sImlhdCI6MTcxNTMxNzU0N30.Y8ZdecVTjLQYCaS-wz_fyLEmtOAzvnX2IEvYddP6irE\",\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    console.log(\"Deleting a new note\" + id);\n    const newNotes = notes.filter(note => {\n      return note._id !== id;\n    });\n    setNotes(newNotes);\n  };\n\n  //Edit a Note\n  const editNote = async (id, title, description, tag) => {\n    //API call\n    const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"auth-token\": localStorage.getItem('token')\n        // \"auth-token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjYzZDMyODQ1M2ZmYzY2MTUzYWFkNGE1In0sImlhdCI6MTcxNTMxNzU0N30.Y8ZdecVTjLQYCaS-wz_fyLEmtOAzvnX2IEvYddP6irE\",\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = await response.json();\n    console.log(json);\n    let newNotes = JSON.parse(JSON.stringify(notes));\n    //Logic to edit in client\n    for (let index = 0; index < newNotes.length; index++) {\n      const element = newNotes[index];\n      if (element._id === id) {\n        newNotes[index].title = title;\n        newNotes[index].description = description;\n        newNotes[index].tag = tag;\n        break;\n      }\n    }\n    setNotes(newNotes);\n  };\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      deleteNote,\n      editNote,\n      getNotes\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteState, \"FwnHZK6cGhoeGRFLNSXOw+yrj+o=\");\n_c = NoteState;\nexport default NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["React","NoteContext","useState","jsxDEV","_jsxDEV","NoteState","props","_s","host","initialNotes","notes","setNotes","getNotes","response","fetch","method","headers","json","console","log","addNote","title","description","tag","localStorage","getItem","body","JSON","stringify","note","concat","deleteNote","id","newNotes","filter","_id","editNote","parse","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/reactLearn/inotebook/src/context/notes/NoteState.js"],"sourcesContent":["import React from \"react\";\r\nimport NoteContext from \"./noteContext\";\r\nimport { useState } from \"react\";\r\n\r\nconst NoteState  = (props) => {\r\n       const host = \"http://localhost:5000\"\r\n      const initialNotes = []\r\n      const[notes , setNotes] = useState(initialNotes);\r\n\r\n      \r\n      //Get all Notes\r\n      const getNotes = async()=>{\r\n        //API call\r\n        const response = await fetch(`${host}/api/notes//fetchallnotes`, {\r\n          method: \"GET\", \r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n           // \"auth-token\" :  localStorage.getItem('token')\r\n          //\"auth-token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjYzZDMyODQ1M2ZmYzY2MTUzYWFkNGE1In0sImlhdCI6MTcxNTMxNzU0N30.Y8ZdecVTjLQYCaS-wz_fyLEmtOAzvnX2IEvYddP6irE\",\r\n          },\r\n        });\r\n        const json = await response.json()\r\n          console.log(json);\r\n          setNotes(json)\r\n      }\r\n\r\n\r\n      //ADD a Note\r\n      const addNote = async(title , description , tag)=>{\r\n        //API call\r\n        const response = await fetch(`${host}/api/notes/addnote`, {\r\n          method: \"POST\", \r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"auth-token\" :  localStorage.getItem('token')\r\n           // \"auth-token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjYzZDMyODQ1M2ZmYzY2MTUzYWFkNGE1In0sImlhdCI6MTcxNTMxNzU0N30.Y8ZdecVTjLQYCaS-wz_fyLEmtOAzvnX2IEvYddP6irE\",\r\n          },\r\n          body: JSON.stringify({title , description ,tag}) \r\n        });\r\n        const note = await response.json();\r\n        setNotes(notes.concat(note));\r\n        console.log(note);\r\n        console.log(\"Adding a new note\");\r\n        \r\n      }\r\n      \r\n      //Delete a Note\r\n      const deleteNote = async(id)=>{\r\n        //API call\r\n        const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n          method: \"DELETE\", \r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"auth-token\" :  localStorage.getItem('token')\r\n           // \"auth-token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjYzZDMyODQ1M2ZmYzY2MTUzYWFkNGE1In0sImlhdCI6MTcxNTMxNzU0N30.Y8ZdecVTjLQYCaS-wz_fyLEmtOAzvnX2IEvYddP6irE\",\r\n          }\r\n        });\r\n        const json =  await response.json(); \r\n        console.log(json);\r\n        console.log(\"Deleting a new note\" +id);\r\n        const newNotes = notes.filter((note)=>{return note._id!== id})\r\n        setNotes(newNotes);\r\n      }\r\n\r\n      //Edit a Note\r\n      const editNote = async(id , title,description , tag)=>{\r\n        //API call\r\n        const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n          method: \"PUT\", \r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"auth-token\" :  localStorage.getItem('token')\r\n           // \"auth-token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjYzZDMyODQ1M2ZmYzY2MTUzYWFkNGE1In0sImlhdCI6MTcxNTMxNzU0N30.Y8ZdecVTjLQYCaS-wz_fyLEmtOAzvnX2IEvYddP6irE\",\r\n          },\r\n          body: JSON.stringify({title , description ,tag}) \r\n        });\r\n        const json =  await response.json(); \r\n        console.log(json);\r\n\r\n        let newNotes = JSON.parse(JSON.stringify(notes));\r\n        //Logic to edit in client\r\n        for(let index =0 ; index<newNotes.length ; index++)\r\n          {\r\n            const element = newNotes[index];\r\n            if(element._id === id)\r\n              {\r\n                newNotes[index].title = title;\r\n                newNotes[index].description = description;\r\n                newNotes[index].tag = tag;\r\n                break;\r\n              } \r\n          }\r\n          setNotes(newNotes);\r\n      }\r\n\r\nreturn(\r\n    <NoteContext.Provider value = {{notes , addNote , deleteNote,editNote ,getNotes}}>\r\n        {props.children}\r\n    </NoteContext.Provider>\r\n    )\r\n}\r\n\r\nexport default NoteState;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}